default_platform(:ios)

PROJECT_PATH = 'ConnectedFueling.xcodeproj'
TEAM_ID_PRODUCTION = '8T694MPXAZ'
APP_ID_PRODUCTION = 'car.pace.cofu'

platform :ios do
  version_number = ENV['VERSION_NAME']
  build_number = ENV['BUILD_NUMBER']

  before_all do
    clear_derived_data

    create_keychain(
      name: ENV['MATCH_KEYCHAIN_NAME'],
      password: ENV['MATCH_KEYCHAIN_PASSWORD'],
      unlock: true,
      timeout: 3600,
      add_to_search_list: true,
      verbose: true
    )
  end

  after_all do
    delete_keychain(name: ENV['MATCH_KEYCHAIN_NAME'])
  end

  desc "Push a new beta build to TestFlight"
  lane :build_beta do
    verify_xcode

    info_plist_path = 'App/SupportingFiles/Info.plist'

    # Repair code signing
    disable_automatic_code_signing(
      path: PROJECT_PATH,
      team_id: TEAM_ID_PRODUCTION
    )

    match(
      type: 'appstore',
      team_id: TEAM_ID_PRODUCTION,
      keychain_name: ENV['MATCH_KEYCHAIN_NAME'],
      keychain_password: ENV['MATCH_KEYCHAIN_PASSWORD'],
      app_identifier: APP_ID_PRODUCTION,
      verbose: true
    )

    update_project_provisioning(
      xcodeproj: PROJECT_PATH,
      target_filter: 'App',
      profile: ENV['sigh_car.pace.cofu_appstore_profile-path'],
      build_configuration: 'Production'
    )

    set_info_plist_value(path: info_plist_path, key: 'CFBundleShortVersionString', value: version_number)
    set_info_plist_value(path: info_plist_path, key: 'CFBundleVersion', value: build_number)

    gym(
      clean: true,
      export_method: 'app-store',
      scheme: 'App',
      export_team_id: TEAM_ID_PRODUCTION,
      configuration: 'Production',
      include_bitcode: true,
      include_symbols: true,
      export_options: {
        method: 'app-store',
        compileBitcode: true,
        uploadBitcode: true,
        uploadSymbols: true,
        provisioningProfiles: {
          APP_ID_PRODUCTION => ENV['sigh_car.pace.cofu_appstore_profile-name']
        }
      },
      codesigning_identity: 'Apple Distribution: PACE Telematics GmbH'
    )
  end

  lane :publish do
    upload_to_testflight
  end
end
