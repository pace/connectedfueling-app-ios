default_platform(:ios)

PROJECT_PATH = 'ConnectedFueling.xcodeproj'
TEAM_ID_PRODUCTION = ENV['COMPANY_TEAM_ID']
APP_ID_PRODUCTION = 'car.pace.cofu'

platform :ios do
  version_number = ENV['VERSION_NAME']
  build_number = ENV['BUILD_NUMBER']

  before_all do
    clear_derived_data

    create_keychain(
      name: ENV['MATCH_KEYCHAIN_NAME'],
      password: ENV['MATCH_KEYCHAIN_PASSWORD'],
      unlock: true,
      timeout: 3600,
      add_to_search_list: true,
      verbose: true
    )
  end

  after_all do
    delete_keychain(name: ENV['MATCH_KEYCHAIN_NAME'])
  end

  desc "Push a new beta build to TestFlight"
  lane :build_beta do
    verify_xcode

    info_plist_path = 'App/SupportingFiles/Info.plist'

    # Repair code signing
    disable_automatic_code_signing(
      path: PROJECT_PATH,
      team_id: TEAM_ID_PRODUCTION
    )

    match(
      type: 'appstore',
      team_id: TEAM_ID_PRODUCTION,
      keychain_name: ENV['MATCH_KEYCHAIN_NAME'],
      keychain_password: ENV['MATCH_KEYCHAIN_PASSWORD'],
      app_identifier: APP_ID_PRODUCTION,
      verbose: true
    )

    update_project_provisioning(
      xcodeproj: PROJECT_PATH,
      target_filter: 'App',
      profile: ENV['sigh_car.pace.cofu_appstore_profile-path'],
      build_configuration: 'Production'
    )

    set_info_plist_value(path: info_plist_path, key: 'CFBundleShortVersionString', value: version_number)
    set_info_plist_value(path: info_plist_path, key: 'CFBundleVersion', value: build_number)

    update_signing(
      target: 'App',
      environment: 'Production',
      team_id: TEAM_ID_PRODUCTION
    )

    gym(
      clean: true,
      export_method: 'app-store',
      scheme: 'App',
      export_team_id: TEAM_ID_PRODUCTION,
      configuration: 'Production',
      include_bitcode: false,
      include_symbols: true,
      export_options: {
        method: 'app-store',
        compileBitcode: false,
        uploadBitcode: false,
        uploadSymbols: true,
        provisioningProfiles: {
          APP_ID_PRODUCTION => ENV['sigh_car.pace.cofu_appstore_profile-name']
        }
      }
    )
  end

  lane :update_signing do |options|
    Dir.chdir('..') do
      project_path = PROJECT_PATH
      project = Xcodeproj::Project.open(project_path)
      puts options[:target]
      puts project.targets
      main_target = project.targets.select { |target| target.name == options[:target] }.first

      if main_target
        puts 'Found target'
        puts "Environment: #{options[:environment]}"
        configuration = main_target.build_configurations.select { |config| config.name == options[:environment] }.first

        if configuration
            puts 'Found configuration'
            sdk = configuration.build_settings['SDKROOT'] || 'iphoneos'
            configuration.build_settings["CODE_SIGN_IDENTITY[sdk=#{sdk}*]"] = 'iPhone Distribution'
            configuration.build_settings["DEVELOPMENT_TEAM[sdk=#{sdk}*]"] = options[:team_id]
            configuration.build_settings["PROVISIONING_PROFILE_SPECIFIER[sdk=#{sdk}*]"] = configuration.build_settings['PROVISIONING_PROFILE_SPECIFIER'] || 'ERROR'
        end

        project.save
      end
    end
  end

  lane :publish do
    upload_to_testflight(
      distribute_external: true,
      groups: ['Jamit Labs', 'Partners'],
      changelog: 'Have Fun Testing'
    )
  end

  desc 'Submit the latest uploaded version to Apple\'s app review'
  lane :submit_review do
    deliver(
      reset_ratings: false,
      submit_for_review: false,
      automatic_release: false,
      phased_release: true,
      force: true, # Skip HTMl report verification
      skip_screenshots: false,
      overwrite_screenshots: true,
      ignore_language_directory_validation: true,
      app_version: version_number,
      build_number: build_number,
      skip_binary_upload: true,
      skip_metadata: false,
      metadata_path: "./fastlane/metadata",
      submission_information: {
        add_id_info_uses_idfa: false,
        add_id_info_limits_tracking: true,
        add_id_info_serves_ads: false,
        add_id_info_tracks_action: true,
        add_id_info_tracks_install: true,
        content_rights_has_rights: true,
        content_rights_contains_third_party_content: true,
        export_compliance_platform: 'ios',
        export_compliance_compliance_required: false,
        export_compliance_encryption_updated: false,
        export_compliance_app_type: nil,
        export_compliance_uses_encryption: false,
        export_compliance_is_exempt: false,
        export_compliance_contains_third_party_cryptography: false,
        export_compliance_contains_proprietary_cryptography: false,
        export_compliance_available_on_french_store: false
      }
    )
  end
end
