stages:
  - test
  - build
  - publish

before_script:
  - bundle install || true
  - git fetch --prune --prune-tags
  - echo "Latest tag to be used as build and version number"
  - export LATEST_TAG=$(git describe --tags --abbrev=0 --match "connectedfueling-app-*")
  - export TAG_NUMBER=${LATEST_TAG##connectedfueling-app-v} # Get content after connectedfueling-app-v
  - export VERSION_NAME=${TAG_NUMBER%.*} # Get content before last .
  - export BUILD_NUMBER=${TAG_NUMBER##*.} # Get content after last .
  - echo "Building version $VERSION_NAME with build number $BUILD_NUMBER"

.dependent_changes: &dependent_changes
    changes:
      - .gitlab-ci.yml
      - "ConnectedFueling.xcodeproj/project.pbxproj"
      - "App/**/*"
      - "Gemfile.lock"
      - "scripts/**/*"

.only_merge_requests: &only_merge_requests
  only:
    refs:
      - merge_requests
    <<: *dependent_changes

.only_master: &only_master
  only:
    refs:
      - master
    <<: *dependent_changes

.runner_tags:
  tags:
    - ios

.base_template:
  extends: .runner_tags
  interruptible: true

## Merge requests
### Plist
plist:
  extends: .base_template
  stage: test
  before_script:
    - echo "Ignore global before_script"
  after_script:
    - echo "Ignore global after_script"
  script:
    - find . -name "*.strings" -size +0 -print0 | xargs -0 plutil -lint
  <<: *only_merge_requests

### Code style
code_style:
  extends: .base_template
  stage: test
  before_script:
    - echo "Ignore global before_script"
  after_script:
    - echo "Ignore global after_script"
  script:
    - swiftlint
  <<: *only_merge_requests

### Unit tests
unit_test:
  extends: .base_template
  stage: test
  script:
    - bundle exec fastlane test --env sandbox
  allow_failure: false
  <<: *only_merge_requests
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /WIP/

### Review
build_review:
  extends: .base_template
  stage: build
  script:
    - bundle exec fastlane build_cofu_app_for_merge_request --env sandbox
  <<: *only_merge_requests
  except:
    refs:
      - tags
    variables:
     - $CI_COMMIT_MESSAGE =~ /WIP/
  environment:
    name: review/$CI_COMMIT_REF_NAME
  artifacts:
    name: "review-app"
    paths:
      - ./App.ipa
    expire_in: 2 days

## Release to TestFlight
release_schedule:
  image: node:latest
  stage: publish
  before_script: []
  after_script: []
  script:
    - if $(eval $CONDITION); then echo "Releasing..."; else echo "Nothing to do"; exit 0; fi
    - echo "Current time to be used as new build and version number"
    - export BUILD_NUMBER=$(TZ=Etc/Utc date "+%Y%m%d%H")
    - export VERSION_NAME=$(TZ=Etc/Utc date "+%y.%V.%u")
    - export CUSTOM_TAG_NAME="${TAG_PREFIX}v${VERSION_NAME}.${BUILD_NUMBER}"
    - export CUSTOM_BRANCH_NAME="main"
    - echo "Creating tag with tag name:" $CUSTOM_TAG_NAME
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@git.pace.cloud/pace/mobile/common.git tmp/common
    - cd tmp/common/scripts/release
    - yarn install
    - node --unhandled-rejections=strict create-empty-release.js
  only:
    refs:
      - schedules
    variables:
      - $SCHEDULED_JOB == "connectedfueling-app-testflight"
  dependencies: []
  needs: []
  variables:
    TAG_PREFIX: "connectedfueling-app-"
  tags:
    - docker

load_apps:
  image: python:3.8
  stage: build
  only:
    - tags
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/pace/mobile/common.git tmp/common
    - pip3 install -r tmp/common/scripts/whitelabel-app/requirements.txt
    - python3 tmp/common/scripts/whitelabel-app/generate_build_apps_yaml.py --directus-base-url $DIRECTUS_BASE_URL --access-token $DIRECTUS_ACCESS_TOKEN
  artifacts:
    paths:
      - build-apps.yml
  except:
    variables:
      - $CI_COMMIT_TAG !~ /^connectedfueling-app-/
  tags:
    - docker

build_apps:
  stage: build
  only:
    - tags
  trigger:
    include:
      - artifact: build-apps.yml
        job: load_apps
  except:
    variables:
      - $CI_COMMIT_TAG !~ /^connectedfueling-app-/

### Merge main into release (triggers GitHub mirroring)
trigger_github_mirroring:
  extends: .base_template
  stage: publish
  before_script: []
  after_script: []
  script:
    - ./scripts/trigger_github_mirroring.sh
  rules:
    - if: $SCHEDULED_JOB == "connectedfueling-app-github-mirroring"
    - if: $SCHEDULED_JOB == "connectedfueling-app-testflight"