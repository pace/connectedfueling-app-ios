//
// Generated by SwiftPoet
// https://github.com/outfoxx/swiftpoet
//
import Foundation

protocol AnalyticEvent {
    var key: String { get }
    var parameters: [String: Any]? { get }
}

struct AnalyticEvents {
    /**
     * Event to track the successful installation of the application and initialisation of the analytics framework. */
    struct AppInstalledEvent: AnalyticEvent {
        let key: String = "app_installed"
        let parameters: [String: Any]? = nil
    }

    /**
     * Event to track that the app was opened (send every time). */
    struct AppOpenedEvent: AnalyticEvent {
        let key: String = "app_opened"
        let parameters: [String: Any]? = nil
    }

    /**
     * Event to track the sign in (includes registrations & sign-ups) of a user. */
    struct UserSignedInEvent: AnalyticEvent {
        let key: String = "user_signed_in"
        let parameters: [String: Any]? = nil
    }

    /**
     * Event to track if the user started the boarding of a card. */
    struct CardBoardingStartedEvent: AnalyticEvent {
        let key: String = "card_boarding_started"
        let parameters: [String: Any]? = nil
    }

    /**
     * Event to track if the user has used the app close to a station which is enabled for this application. */
    struct StationNearbyEvent: AnalyticEvent {
        let key: String = "station_nearby"
        let parameters: [String: Any]? = nil
    }

    /**
     * Event to track if the user initiated the fueling process at a station. */
    struct FuelingStartedEvent: AnalyticEvent {
        let key: String = "fueling_started"
        let parameters: [String: Any]? = nil
    }

    /**
     * Event to track if the user canceled the fueling process. */
    struct FuelingCanceledEvent: AnalyticEvent {
        let key: String = "fueling_canceled"
        let parameters: [String: Any]? = nil
    }

    /**
     * Event to track the successful boarding of a card, including the type of the card. */
    struct CardBoardingDoneEvent: AnalyticEvent {
        let key: String = "card_boarding_done"
        let parameters: [String: Any]?

        init(type: String?) {
            var parameters: [String: Any] = [:]
            if let type = type {
                parameters["type"] = type
            }
            self.parameters = parameters
        }
    }

    /**
     * Event to track if the user requested a navigation and was successfully forwarded to a routing application (apple maps / google maps). */
    struct StationNavigationUsedEvent: AnalyticEvent {
        let key: String = "station_navigation_used"
        let parameters: [String: Any]? = nil
    }

    /**
     * Event to track if the fueling process was finished. */
    struct FuelingEndedEvent: AnalyticEvent {
        let key: String = "fueling_ended"
        let parameters: [String: Any]?

        init(success: Bool?) {
            var parameters: [String: Any] = [:]
            if let success = success {
                parameters["success"] = success
            }
            self.parameters = parameters
        }
    }
}
